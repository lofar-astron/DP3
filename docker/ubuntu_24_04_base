FROM ubuntu:24.04

# Needs to be bumped before next DP3 release.
ENV EVERYBEAM_VERSION=v0.7.0
ENV IDG_VERSION=1.2.0
ENV AOFLAGGER_VERSION=v3.4.0
ENV CASACORE_VERSION=450a5682a2aa927de123e9953157f3610a5a4f3c

RUN export DEBIAN_FRONTEND="noninteractive" && \
	apt-get update && \
	apt-get install -y \
	bison \
	build-essential \
	cmake \
	doxygen \
	flex \
	g++ \
	gcovr \
	gfortran \
	git \
	libarmadillo-dev \
	libboost-date-time-dev \
	libboost-filesystem-dev \
	libboost-program-options-dev \
	libboost-python-dev \
	libboost-system-dev \
	libboost-test-dev \
	libcfitsio-dev \
	libfftw3-dev \
	libgsl-dev \
	libgtkmm-3.0-dev \
	libhdf5-serial-dev \
	liblua5.3-dev \
	libpng-dev \
	ninja-build \
	pkg-config \
	pipx \
	pybind11-dev \
	python3-dev \
	python3-full \
	wcslib-dev \
	wget \
	&& \
	rm -rf /var/lib/apt/lists/*
# Create a Python virtual environment with necessary modules for Casacore and
# DP3 tests. The Ubuntu python3-* packages are not always recent enough.
RUN python3 -m venv /dp3env \
  && /dp3env/bin/pip install h5py numpy pytest
# Install WSRT Measures (extra casacore data, for integration tests)
# Note: The file on the server is updated daily. When warnings regarding leap
# seconds appear, ignore them or regenerate the docker image.
RUN mkdir -p /usr/share/casacore/data \
  && cd /usr/share/casacore/data \
  && wget -nv https://www.astron.nl/iers/WSRT_Measures.ztar \
  && tar xfz WSRT_Measures.ztar \
  && rm WSRT_Measures.ztar
# The casacore version in Ubuntu is too old to support C++20, so install a more recent one.
RUN mkdir /external && \
  cd /external && \
  git clone https://github.com/casacore/casacore.git && \
  cd /external/casacore && \
  git checkout ${CASACORE_VERSION} && \
  mkdir build && \
  cd build && \
  cmake .. -DPython3_EXECUTABLE=/dp3env/bin/python3 -DBUILD_TESTING=OFF -DDATA_DIR=/usr/share/casacore/data -DBUILD_SISCO=ON && \
  make -j`nproc` && \
  make install -j`nproc` && \
  cd /external && \
  rm -rf /external/casacore
ENV LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:/usr/local/lib/
RUN cd /external \
  && git clone --depth 1 https://github.com/casacore/python-casacore.git \
  && cd /external/python-casacore \
  && /dp3env/bin/pip install . \
  && cd /external \
  && rm -rf /external/python-casacore \
  && /dp3env/bin/python3 -c "import casacore.tables ; print('Using casacore from path: ' + casacore.tables.__file__);"
# Build aoflagger3 (PORTABLE, since the compile node and run node may differ.)
RUN mkdir /aoflagger && cd /aoflagger \
	&& git clone https://gitlab.com/aroffringa/aoflagger.git src \
	&& ( cd src/ && git checkout ${AOFLAGGER_VERSION} ) \
	&& mkdir build && cd build \
	&& cmake -G Ninja -DCMAKE_INSTALL_PREFIX=/usr -DPORTABLE=ON ../src \
	&& ninja install \
	&& cd / && rm -rf aoflagger
# Build IDG (PORTABLE, since the compile node and run node may differ.)
RUN mkdir /idg && cd /idg \
	&& git clone https://git.astron.nl/RD/idg.git src \
	&& ( cd src/ && git checkout ${IDG_VERSION} ) \
	&& mkdir build && cd build \
	&& cmake -G Ninja -DCMAKE_INSTALL_PREFIX=/usr -DPORTABLE=ON ../src \
	&& ninja install \
	&& cd / && rm -rf idg
# Build EveryBeam (PORTABLE, since the compile node and run node may differ.)
RUN mkdir /everybeam && cd /everybeam \
	&& git clone https://git.astron.nl/RD/EveryBeam.git src \
	&& ( cd src/ && git checkout ${EVERYBEAM_VERSION} ) \
	&& mkdir build && cd build \
	&& cmake -G Ninja -DCMAKE_INSTALL_PREFIX=/usr -DPORTABLE=ON ../src \
	&& ninja install \
	&& cd / && rm -rf everybeam
# EveryBeam by default uses the Python virtual environment directory instead
# of its installation directory for locating its data files.
ENV EVERYBEAM_DATADIR=/usr/share/everybeam
# Ensure that pipx-installed packages are in $PATH.
ENV PATH=${PATH}:/root/.local/bin
