FROM ubuntu:20.04

# Needs to be bumped before next DP3 release.
ENV EVERYBEAM_VERSION=v0.7.2
ENV AOFLAGGER_VERSION=v3.4.0
ENV CASACORE_VERSION=1cfe6199f22574a41de8a0ef9bc1919cf5e11e49

RUN export DEBIAN_FRONTEND="noninteractive" && \
	apt-get update && \
	apt-get install -y \
	bison \
	build-essential \
	cmake \
	doxygen \
	flex \
	g++-10 \
	gfortran \
	git \
	libarmadillo-dev \
	libboost-date-time-dev \
	libboost-filesystem-dev \
	libboost-program-options-dev \
	libboost-python-dev \
	libboost-system-dev \
	libboost-test-dev \
	libcfitsio-dev \
	libfftw3-dev \
	libgsl-dev \
	libgtkmm-3.0-dev \
	libhdf5-serial-dev \
	liblua5.3-dev \
	libpng-dev \
	ninja-build \
	pkg-config \
	pybind11-dev \
	python3-astropy \
	python3-dev \
	python3-numpy \
	wcslib-dev \
	wget \
	&& \
	rm -rf /var/lib/apt/lists/*
ENV CC /usr/bin/gcc-10
ENV CXX /usr/bin/g++-10

# Install WSRT Measures (extra casacore data, for integration tests)
# Note: The file on the ftp site is updated daily. When warnings regarding leap
# seconds appear, ignore them or regenerate the docker image.
RUN wget -nv -O /WSRT_Measures.ztar https://www.astron.nl/iers/WSRT_Measures.ztar \
	&& mkdir -p /var/lib/casacore/data \
	&& cd /var/lib/casacore/data \
	&& tar xfz /WSRT_Measures.ztar \
	&& rm /WSRT_Measures.ztar
# The casacore version in Ubuntu is too old to support C++20, so install a more recent one.
RUN mkdir /external && \
	cd /external && \
	git clone https://github.com/casacore/casacore.git && \
	cd /external/casacore && \
	git checkout ${CASACORE_VERSION} && \
	mkdir build && \
	cd build && \
	cmake .. -DBUILD_TESTING=OFF -DDATA_DIR=/var/lib/casacore/data && \
	make -j`nproc` && \
	make install -j`nproc` && \
	cd /external && \
	rm -rf /external/casacore
# Build aoflagger3 (PORTABLE, since the compile node and run node may differ.)
RUN mkdir /aoflagger && cd /aoflagger \
	&& git clone https://gitlab.com/aroffringa/aoflagger.git src \
	&& ( cd src/ && git checkout ${AOFLAGGER_VERSION} ) \
	&& mkdir build && cd build \
	&& cmake -G Ninja -DCMAKE_INSTALL_PREFIX=/usr -DPORTABLE=ON ../src \
	&& ninja install \
	&& cd / && rm -rf aoflagger
# Build EveryBeam (PORTABLE, since the compile node and run node may differ.)
RUN mkdir /everybeam && cd /everybeam \
	&& git clone https://git.astron.nl/RD/EveryBeam.git src \
	&& ( cd src/ && git checkout ${EVERYBEAM_VERSION} ) \
	&& mkdir build && cd build \
	&& cmake -G Ninja -DCMAKE_INSTALL_PREFIX=/usr -DPORTABLE=ON ../src \
	&& ninja install \
	&& cd / && rm -rf everybeam
