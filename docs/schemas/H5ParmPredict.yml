description: >-
  Subtract multiple directions of visibilities corrupted by an instrument model (in H5Parm) generated by DDECal.
inputs:
  type:
    type: string
    doc: Case-insensitive step type; must be 'h5parmpredict' `.`
  sourcedb:
    type: string
    doc: Path of sourcedb in which a sky model is stored (the output of makesourcedb) `.`
  applycal&#46;parmdb:
    type: string
    doc: Path of the h5parm in which the corruptions are stored `.`
  applycal&#46;correction:
    type: string
    doc: SolTab which contains the directions to be predicted, or "fulljones" `.`
  directions:
    default: "[]"
    type: string?
    doc: List of directions to include. Each of those directions needs to be in the h5parm soltab. If empty, all directions in the soltab are predicted.  The names of the directions need to look like ``[dir1,dir2]``, where ``dir1`` and ``dir2`` are patches in the sourcedb. By default, the full list of directions is taken from the H5Parm. The convention for naming directions in DDECal in H5Parm is ``[patch1,patch2]``. This directions parameter can be used to predict / subtract a subset of the directions `.`
  usebeammodel:
    default: false
    type: bool
    doc: Use the LOFAR beam in the predict part of the calibration `.`
  operation:
    default: replace
    type: string
    doc: Should the predicted visibilities replace those being processed (``replace``, default), should they be subtracted from those being processed (``subtract``) or added to them (``add``) `.`
  applycal&#46;*:
    doc: Set of options for applycal to apply to this predict. For this applycal-substep, .invert is off by default, so the predicted visibilities will be corrupted with the parmdb `.`
  onebeamperpatch:
    type: string?
    doc: Same as in `ApplyBeam <ApplyBeam.html>`__ step `.`
  usechannelfreq:
    type: boolean?
    doc: Same as in `ApplyBeam <ApplyBeam.html>`__ step `.`
  beammode:
    type: enum
    symbols: array_factor, element, default
    doc: Same as in `ApplyBeam <ApplyBeam.html>`__ step `.`
