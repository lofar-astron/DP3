#!/bin/bash

# Get the taql executable and srcdir (script created by cmake's CONFIGURE_FILE).
source findenv.run_script
echo "srcdirx=$rt_srcdir"
pwd=`pwd`
dpppexe=`readlink -f $pwd/../DPPP`



# Set srcdir if not defined (in case run by hand).
if test "$srcdir" = ""; then
  srcdir="$rt_srcdir"
fi

if test ! -f ${srcdir}/tNDPPP-generic.in_MS.tgz; then
  exit 3   # untested
fi

rm -rf tApplyBeam_tmp
mkdir -p tApplyBeam_tmp
# Unpack the MS and other files and do the DPPP run.
cd tApplyBeam_tmp
tar zxf ${srcdir}/tNDPPP-generic.in_MS.tgz
tar zxf ${srcdir}/tApplyBeam.tab.tgz

# Create expected taql output.
echo "    select result of 0 rows" > taql.ref

echo; echo "Test with invert=true and usechannelfreq=false"; echo
cmd=$dpppexe' msin=tNDPPP-generic.MS msout=outinv.ms steps=[applybeam] applybeam.usechannelfreq=false applybeam.invert=true'
echo $cmd
$cmd
# Compare the DATA column of the output MS with the BBS reference output.
$taqlexe 'select from outinv.ms t1, tApplyBeam.tab t2 where not all(near(t1.DATA,t2.DATA_noucf,5e-5) || (isnan(t1.DATA) && isnan(t2.DATA_noucf)))' > taql.out
diff taql.out taql.ref  ||  exit 1

echo; echo "### Test with invert=false on the output of the previous step"; echo
cmd=$dpppexe' msin=outinv.ms msout=out.ms steps=[applybeam] applybeam.usechannelfreq=false applybeam.invert=false'
echo $cmd
$cmd
# Compare the DATA column of the output MS with the original MS.
$taqlexe 'select from out.ms t1, tNDPPP-generic.MS t2 where not all(near(t1.DATA,t2.DATA,5e-5) || (isnan(t1.DATA) && isnan(t2.DATA)))' > taql.out
diff taql.out taql.ref  ||  exit 1

echo; echo "Test with invert=true and usechannelfreq=true"; echo
cmd=$dpppexe' msin=tNDPPP-generic.MS msout=outinv.ms msout.overwrite=true steps=[applybeam] applybeam.usechannelfreq=true applybeam.invert=true'
echo $cmd
$cmd
# Compare the DATA column of the output MS with the BBS reference output.
$taqlexe 'select from outinv.ms t1, tApplyBeam.tab t2 where not all(near(t1.DATA,t2.DATA_ucf,5e-5) || (isnan(t1.DATA) && isnan(t2.DATA_ucf)))' > taql.out
diff taql.out taql.ref  ||  exit 1

echo; echo "Test with invert=false on the output of the previous step"; echo
cmd=$dpppexe' msin=outinv.ms msout=out.ms msout.overwrite=true steps=[applybeam] applybeam.usechannelfreq=true applybeam.invert=false'
echo $cmd
$cmd
# Compare the DATA column of the output MS with the original MS.
$taqlexe 'select from out.ms t1, tNDPPP-generic.MS t2 where not all(near(t1.DATA,t2.DATA,5e-5) || (isnan(t1.DATA) && isnan(t2.DATA)))' > taql.out
diff taql.out taql.ref  ||  exit 1

echo; echo "Test with beammode=ARRAY_FACTOR"; echo
cmd=$dpppexe' msin=tNDPPP-generic.MS msout=outinv.ms msout.overwrite=true steps=[applybeam] applybeam.usechannelfreq=true applybeam.invert=true applybeam.beammode=ARRAY_FACTOR'
echo $cmd
$cmd
# Compare the DATA column of the output MS with the BBS reference output.
$taqlexe 'select from outinv.ms t1, tApplyBeam.tab t2 where not all(near(t1.DATA,t2.DATA_ARRAY_FACTOR,5e-5) || (isnan(t1.DATA) && isnan(t2.DATA_ARRAY_FACTOR)))' > taql.out
diff taql.out taql.ref  ||  exit 1

echo; echo "Test with beammode=ELEMENT"; echo
cmd=$dpppexe' msin=tNDPPP-generic.MS msout=outinv.ms msout.overwrite=true steps=[applybeam] applybeam.usechannelfreq=true applybeam.invert=true applybeam.beammode=ELEMENT'
echo $cmd
$cmd
# Compare the DATA column of the output MS with the BBS reference output.
$taqlexe 'select from outinv.ms t1, tApplyBeam.tab t2 where not all(near(t1.DATA,t2.DATA_ELEMENT,5e-5) || (isnan(t1.DATA) && isnan(t2.DATA_ELEMENT)))' > taql.out
diff taql.out taql.ref  ||  exit 1

echo; echo "Test with updateweights=true"; echo
cmd=$dpppexe' msin=tNDPPP-generic.MS msout=. steps=[applybeam] applybeam.updateweights=truue msout.weightcolumn=NEW_WEIGHT_SPECTRUM'
echo $cmd
$cmd
# Check that the weights have changed
$taqlexe 'select from tNDPPP-generic.MS where all(near(WEIGHT_SPECTRUM, NEW_WEIGHT_SPECTRUM))' > taql.out
diff taql.out taql.ref  ||  exit 1
